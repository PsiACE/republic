[prompts]
name = "gemini-cli-agent"
description = "Gemini CLI agent workspace demonstrating complex system prompt management"
version = "1.0.0"
function_loaders = ["python"]

[prompts.defaults]
# Core system defaults
agent_type = "cli_agent"
domain = "software_engineering"
tone = "concise_direct"
max_output_lines = 3
use_tools = true
explain_critical_commands = true

# Template control
include_workflows = true
include_examples = true

# Environment detection
detect_sandbox = true
detect_git = true

# Tool preferences (for future use)
prefer_parallel_tools = true
use_absolute_paths = true
background_long_processes = true

[prompts.environments]
# Development environment with enhanced features
[prompts.environments.development]
debug_mode = true
verbose_explanations = true
show_tool_reasoning = true
max_output_lines = 8
include_workflows = true
include_examples = true
use_tools = true

# Production environment - minimal output
[prompts.environments.production]
debug_mode = false
verbose_explanations = false
show_tool_reasoning = false
max_output_lines = 2
include_workflows = true
include_examples = false
use_tools = true

# Sandbox environment with safety focus
[prompts.environments.sandbox]
debug_mode = true
verbose_explanations = true
show_tool_reasoning = true
max_output_lines = 5
include_workflows = true
include_examples = true
use_tools = true
safety_first = true 